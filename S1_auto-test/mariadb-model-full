###########################
###    Basic Scripts    ###
###########################

sysbench: 
	"select_random_points.lua",
	"select_random_ranges.lua",
	"oltp_read_only.lua",   
	"oltp_read_write.lua",
	"oltp_write_only.lua", 
	"bulk_insert.lua", 
	"oltp_insert.lua", 
	"oltp_delete.lua", 
	"oltp_update_index.lua", 
	"oltp_update_non_index.lua"

###########################
### workload  variables ###
###########################

# Number of rows per table(10000)
--table-size: 0, 10000, 20000, 40000, 80000, 160000, 320000, 640000, 1280000

# Number of tables(1)
--tables: 1, 4, 16, 64, 128, 256

# number of threads to use(1)
--threads: 1, 5, 10, 15, 20, 50



# Use AUTO-INCREMENT column as Primary Key (for MySQL), or its alternatives in other DBMS. When disabled, use client-generated IDs(true)
--auto-inc: true, false



# Use a secondary index in place of the PRIMARY KEY(false)
--secondary: false, true

# Create a secondary index in addition to the PRIMARY KEY(false)
--create-secondary: false, true



# Storage engine, only innodb support transaction(innodb)
--mysql-storage-engine: innodb, myisam, aria, MEMORY, CSV

# Extra CREATE TABLE options(CHARSET=utf8)()
# create-table-options:


############################################
# Don't start explicit transactions and execute all queries in the AUTOCOMMIT mode(false)
--skip-trx: true, false, nil


###################### reads ######################
# Range size for range SELECT queries(100)
--range-size: -1, 1, 4, 16, 64, 256, 1024, 4096, 16396

# Number of point SELECT queries per transaction(10)
--point-selects: -1, 1, 2, 4, 8, 16, 64, 128

# Number of simple range SELECT queries per transaction(1)
--simple-ranges: <--point-selects>

# Number of SELECT SUM() queries per transaction(1)
--sum-ranges: <--point-selects>

# Number of SELECT ORDER BY queries per transaction(1)
--order-ranges: <--point-selects>

# Number of SELECT DISTINCT queries per transaction(1)
--distinct-ranges: <--point-selects>

# Enable/disable all range SELECT queries(true)
--range-selects: true, false, nil



###################### index ######################
# Number of UPDATE index queries per transaction(1)
--index-updates: <-point-selects>

# Number of UPDATE non-index queries per transaction(1)
--non-index-updates: <-point-selects>



###################### read&write or write ######################
# Number of DELETE/INSERT combinations per transaction(1)
--delete-inserts: <-point-selects>



######################## select_random_ranges only ########################
# Size of BETWEEN ranges(5)
--delta: -1, 1, 5, 10, 20, 50

# Number of random BETWEEN ranges per SELECT(10)
--number-of-ranges: -1, 1, 5, 10, 20, 50, 100



######################## select_random_points only ########################
# Number of random points in the IN() clause in generated SELECTs(10)
--random-points: <--number-of-ranges>



###########################
###  config  variables  ###
###########################


###########################
### workload constrains ###
###########################

[--range-size] <= [--table-size];

# transaction is only available in Innodb strage engine.
IF [--mysql-storage-engine] in {"myisam", "aria", "MEMORY", "CSV"} THEN (
	[--point-selects] = -1 , 
	[--simple-ranges] = -1 , 
	[--sum-ranges] = -1 , 
	[--order-ranges] = -1 , 
	[--distinct-ranges] = -1 , 
	[--index-updates] = -1 , 
	[--non-index-updates] = -1 , 
	[--delete-inserts] = -1 , 
	[--skip-trx] = nil
) ELSE (
	[--point-selects] >= 0 , 
	[--simple-ranges] >= 0 , 
	[--sum-ranges] >= 0 , 
	[--order-ranges] >= 0 , 
	[--distinct-ranges] >= 0 , 
	[--index-updates] >= 0 , 
	[--non-index-updates] >= 0 , 
	[--delete-inserts] >= 0 , 
	[--skip-trx] in {true, false}
);

# insert test just need a empty table.
IF [sysbench] in {"bulk_insert.lua", "oltp_insert.lua"} THEN [--table-size] = 0;


IF [sysbench] in {"oltp_read_write.lua", "oltp_write_only.lua"} THEN [--delete-inserts] >= 0 ELSE [--delete-inserts] = -1;

IF [sysbench] in {"oltp_update_index.lua", "oltp_write_only.lua", "oltp_read_write.lua"} THEN [--index-updates] >= 0 ELSE [--index-updates] = -1;

IF [sysbench] in {"oltp_update_non_index.lua", "oltp_write_only.lua", "oltp_read_write.lua"} THEN [--non-index-updates] >= 0 ELSE [--non-index-updates] = -1;

IF [sysbench] in {"oltp_read_only.lua",  "oltp_read_write.lua"} THEN (
	[--range-size] >= 0 ,
	[--point-selects] >= 0 ,
	[--simple-ranges] >= 0 ,
	[--sum-ranges] >= 0 ,
	[--order-ranges] >= 0 ,
	[--distinct-ranges] >= 0 ,
	[--range-selects] in {true, false}
) ELSE (
	[--range-size] = -1 ,
	[--point-selects] = -1 ,
	[--simple-ranges] = -1 ,
	[--sum-ranges] = -1 ,
	[--order-ranges] = -1 ,
	[--distinct-ranges] = -1 ,
	[--range-selects] = nil
);


# for select_random_ranges
IF [sysbench] <> "select_random_ranges.lua" THEN (
	[--delta]=-1 , 
	[--number-of-ranges] = -1
) ELSE (
	[--delta] >= 0 ,
	[--number-of-ranges] >= 0
);


# for select_random_points
IF [sysbench] <> "select_random_points.lua" THEN (
	[--random-points] = -1 
) ELSE (
	[--random-points] >= 0
);


###########################
###  config constrains  ###
###########################